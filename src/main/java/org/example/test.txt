package org.example;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

public class Birthday {
    int getAge(int year,int month, int date) {
        LocalDate birthDay = LocalDate.of(year, month,date);
        LocalDate nowData = LocalDate.now();
        int inDays = (int) ChronoUnit.DAYS.between(birthDay, nowData);
        System.out.println("Возвраст в днях "+inDays);

        LocalDate birthDay1=birthDay;

       /* do {
            birthDay1=birthDay.plusYears(1);
        }
        while (birthDay1.getYear()<2022);
       */
int years = birthDay.getYear();
  int yearsNow = nowData.getYear();
        int inDays1;

  for (int i = years; i<yearsNow; i++) { birthDay1=birthDay1.plus(1,ChronoUnit.YEARS); }
  if (birthDay1.isAfter(nowData))
  {
      birthDay1=birthDay1.minus(1,ChronoUnit.YEARS);
       inDays1 = (int) ChronoUnit.DAYS.between(birthDay, birthDay1);
      //System.out.println(birthDay1);
  }
  else {  inDays1 = (int) ChronoUnit.DAYS.between(birthDay, birthDay1);}
//while(years<yearsNow) {birthDay1=birthDay1.plus(1,ChronoUnit.YEARS);  }
        //while (years<2022) { birthDay1.plus(1,ChronoUnit.YEARS); years = birthDay1.getYear();}

        System.out.println("Возвраст в днях для полных лет "+inDays1);

            return inDays;
    }

    LocalDate nextBirthday(int year, int month, int date)
    {

        LocalDate myBirthday = LocalDate.of(year, month, date);
        LocalDate nextBirthday = myBirthday;
        LocalDate dat = LocalDate.now();

        switch (1000)
        {
            case 1000:  while (nextBirthday.isBefore(dat))
            { nextBirthday = nextBirthday.plusDays(1000);}

                break;
        }

    System.out.println("Следующий день рождения в 1000 дней "+nextBirthday);

        return nextBirthday;
    }

}
Hello, Files


 /* FileInputStream stream;
        StringBuilder result = new StringBuilder();
        try {
            stream = new FileInputStream("cat.csv");
            int r;
            do {
                r= stream.read();
                result.append((char)r);
            } while (r!=-1);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println(result.toString());
        try {
            FileOutputStream outStream = new FileOutputStream("out.txt");
            outStream.write(result.toString().getBytes(StandardCharsets.UTF_8),0, result.length());
            outStream.flush();
            outStream.close();
        }catch (IOException e) {
            e.printStackTrace();
        }
        */

        /* BufferedReader bufferedReader = new BufferedReader(new FileReader("cat.csv"));
                 String  line;
                 counter = 0;
                 while ((line= bufferedReader.readLine())!=null){
                     counter++;
                     System.out.println(line);
                 }
         bufferedReader.close();
                System.out.println();

                */